"""
Reverses a stream unless it is explicitly marked as infinite (in which case
an error will be returned).

Example:

    > [1, 2, 3, 4] -> reverse => []
    [4,3,2,1]

"""
:: <a> -> <a>
reverse(in: stream)

"""
Adds element `elem` to collection `col`. Used by `conj`.

Example:

    > conj([1, 2], 3)
    [1,2,3]

"""
:: a, b -> b
conj_builtin(col, elem)

###

"""
Underlying function for the vector product operator.

Example:

    a = (1, 2, 3)
    b = (4, 5, 6)
    > a â€¢ b
    (4,10,18)

"""
:: vec<a, N>, vec<a, N> -> a
dot(a, b)

"""
Underlying function for the vector add operator.

Example:

    a = (1, 2)
    b = (3, 4)
    > a + b
    (4,6)

"""
:: vec<a, N>, vec<a, N> -> vec<a, N>
add(v1, v2)

"""
Underlying function for the vector subtract operator.

Example:

    a = (1, 2)
    b = (3, 4)
    > a - b
    (-2,-2)

"""
:: vec<a, N>, vec<a, N> -> vec<a, N>
sub(v1, v2)
